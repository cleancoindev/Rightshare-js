const FRight=[{constant:!0,inputs:[],name:"currentTokenId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"metadata",outputs:[{internalType:"uint256",name:"version",type:"uint256"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"address",name:"baseAssetAddress",type:"address"},{internalType:"uint256",name:"baseAssetId",type:"uint256"},{internalType:"bool",name:"isExclusive",type:"bool"},{internalType:"uint256",name:"maxISupply",type:"uint256"},{internalType:"uint256",name:"circulatingISupply",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"isFrozen",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],IRight=[{inputs:[],name:"currentTokenId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"metadata",outputs:[{internalType:"uint256",name:"parentId",type:"uint256"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"address",name:"baseAssetAddress",type:"address"},{internalType:"uint256",name:"baseAssetId",type:"uint256"},{internalType:"bool",name:"isExclusive",type:"bool"},{internalType:"uint256",name:"maxISupply",type:"uint256"},{internalType:"uint256",name:"serialNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],addresses={FRight:"0xD923152e96B0f8eDb28a8feC8765D9F8D81a6920",IRight:"0xcD8bF9Dd771E93B17e2164698dcB30Cb87D51057"};window.addEventListener("load",async()=>{if(window.ethereum){window.web3=new Web3(ethereum);try{await ethereum.enable()}catch(a){}}else window.web3?window.web3=new Web3(web3.currentProvider):console.log("Non-Ethereum browser detected. You should consider trying MetaMask!");window.web3&&(window.FRightContract=new web3.eth.Contract(FRight,addresses.FRight),window.IRightContract=new web3.eth.Contract(IRight,addresses.IRight))});function hasRight(a,b,c,d,e){return new Promise(f=>{d.methods.isFrozen(a,b).call().then(d=>{d?e.methods.currentTokenId().call().then(async d=>{if(0!==d)for(let g=1;g<=d;g++){const d=await e.methods.ownerOf(g).call();if(d.toLowerCase()===c.toLowerCase()){const{baseAssetAddress:c,baseAssetId:d,endTime:h}=await e.methods.metadata(g).call();if(c.toLowerCase()===a.toLowerCase()&&d===b&&h>Date.now()/1e3){f(!0);break}}}else f(!1)}):f(!1)})})}window.hasIRight=(...a)=>hasRight(...a,FRightContract,IRightContract),window.hasFRight=(...a)=>hasRight(...a,FRightContract,FRightContract);